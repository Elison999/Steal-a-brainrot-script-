-- Rayfield GUI Script - Parte 1
-- Carregando Rayfield Library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Variáveis globais
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Variáveis de controle
local FloatConnection
local isFloating = false
local floatHeight = 16
local floatButton
local floatButtonConnection

local SitConnection
local isSitting = false
local sitBlock
local sitButton
local sitControlButtons = {}
local blockMoveSpeed = 16

local SavedPosition = nil
local saveButton
local teleportButton
local isTeleporting = false

local NoClipConnection
local FollowPlatformConnection
local isNoClipping = false
local followPlatform
local cloneCreated = false
local lastClone

-- Criando a GUI principal
local Window = Rayfield:CreateWindow({
   Name = "Multi-Function Script",
   LoadingTitle = "Carregando Script Avançado",
   LoadingSubtitle = "by YourName",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "MultiFunction",
      FileName = "Config"
   },
   Discord = {
      Enabled = false,
   },
   KeySystem = false,
})

-- Tab Principal
local MainTab = Window:CreateTab("Main", 4483362458)

-- Função para criar botões flutuantes arrastaveis
local function CreateDraggableButton(name, size, position, callback)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name .. "Gui"
    screenGui.Parent = PlayerGui
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local frame = Instance.new("Frame")
    frame.Name = name .. "Frame"
    frame.Size = size or UDim2.new(0, 100, 0, 50)
    frame.Position = position or UDim2.new(0.5, 0, 0.5, 0)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    frame.Active = true
    frame.Draggable = true
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = frame
    
    local button = Instance.new("TextButton")
    button.Name = name .. "Button"
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Position = UDim2.new(0, 0, 0, 0)
    button.BackgroundTransparency = 1
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold
    button.Parent = frame
    
    if callback then
        button.MouseButton1Click:Connect(callback)
    end
    
    return screenGui, frame, button
end

-- Função Float Toggle
local function ToggleFloat(enabled)
    if enabled and not isFloating then
        isFloating = true
        
        -- Criar botão flutuante
        local gui, frame, button = CreateDraggableButton("Float", 
            UDim2.new(0, 80, 0, 40), 
            UDim2.new(0, 50, 0, 200),
            function()
                if FloatConnection then
                    FloatConnection:Disconnect()
                    FloatConnection = nil
                    button.Text = "Float OFF"
                    button.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
                else
                    FloatConnection = RunService.Heartbeat:Connect(function()
                        if Character and Character:FindFirstChild("HumanoidRootPart") then
                            local rootPart = Character.HumanoidRootPart
                            local bodyVelocity = rootPart:FindFirstChild("FloatVelocity")
                            
                            if not bodyVelocity then
                                bodyVelocity = Instance.new("BodyVelocity")
                                bodyVelocity.Name = "FloatVelocity"
                                bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
                                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                                bodyVelocity.Parent = rootPart
                            end
                            
                            local raycast = Workspace:Raycast(rootPart.Position, Vector3.new(0, -1000, 0))
                            local targetY = raycast and (raycast.Position.Y + floatHeight) or (rootPart.Position.Y)
                            
                            local currentY = rootPart.Position.Y
                            local difference = targetY - currentY
                            
                            if math.abs(difference) > 2 then
                                bodyVelocity.Velocity = Vector3.new(0, difference * 2, 0)
                            else
                                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                            end
                        end
                    end)
                    button.Text = "Float ON"
                    frame.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
                end
            end
        )
        
        floatButton = gui
        button.Text = "Float OFF"
        frame.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        
    elseif not enabled and isFloating then
        isFloating = false
        if FloatConnection then
            FloatConnection:Disconnect()
            FloatConnection = nil
        end
        if floatButton then
            floatButton:Destroy()
            floatButton = nil
        end
        if Character and Character:FindFirstChild("HumanoidRootPart") then
            local bodyVelocity = Character.HumanoidRootPart:FindFirstChild("FloatVelocity")
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
        end
    end
end

-- Função Sit Block Toggle
local function ToggleSitBlock(enabled)
    if enabled and not isSitting then
        isSitting = true
        
        -- Criar botão principal do Sit Block
        local gui, frame, button = CreateDraggableButton("Sit Block", 
            UDim2.new(0, 100, 0, 40), 
            UDim2.new(0, 200, 0, 200),
            function()
                if not sitBlock then
                    -- Criar o bloco para sentar
                    sitBlock = Instance.new("Part")
                    sitBlock.Name = "SitBlock"
                    sitBlock.Size = Vector3.new(4, 1, 4)
                    sitBlock.Material = Enum.Material.Neon
                    sitBlock.BrickColor = BrickColor.new("Bright blue")
                    sitBlock.Anchored = true
                    sitBlock.CanCollide = true
                    sitBlock.Position = Character.HumanoidRootPart.Position + Vector3.new(0, -3, 0)
                    sitBlock.Parent = Workspace
                    
                    -- Fazer o personagem sentar no bloco
                    Humanoid.Sit = true
                    Character.HumanoidRootPart.CFrame = CFrame.new(sitBlock.Position + Vector3.new(0, 2, 0))
                    
                    -- Criar botões de controle
                    local controlPositions = {
                        {name = "←", pos = UDim2.new(0, 50, 0, 300), dir = Vector3.new(-1, 0, 0)},
                        {name = "↑", pos = UDim2.new(0, 100, 0, 250), dir = Vector3.new(0, 0, -1)},
                        {name = "↓", pos = UDim2.new(0, 100, 0, 350), dir = Vector3.new(0, 0, 1)},
                        {name = "→", pos = UDim2.new(0, 150, 0, 300), dir = Vector3.new(1, 0, 0)}
                    }
                    
                    for _, control in pairs(controlPositions) do
                        local controlGui, controlFrame, controlButton = CreateDraggableButton(
                            control.name,
                            UDim2.new(0, 40, 0, 40),
                            control.pos,
                            function()
                                if sitBlock then
                                    local tween = TweenService:Create(
                                        sitBlock,
                                        TweenInfo.new(0.5, Enum.EasingStyle.Quad),
                                        {Position = sitBlock.Position + (control.dir * blockMoveSpeed)}
                                    )
                                    tween:Play()
                                    
                                    -- Mover o personagem junto
                                    tween.Completed:Connect(function()
                                        if Character and Character:FindFirstChild("HumanoidRootPart") then
                                            Character.HumanoidRootPart.CFrame = CFrame.new(sitBlock.Position + Vector3.new(0, 2, 0))
                                        end
                                    end)
                                end
                            end
                        )
                        table.insert(sitControlButtons, controlGui)
                    end
                    
                    button.Text = "Remove Block"
                    frame.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
                else
                    -- Remover bloco e controles
                    if sitBlock then
                        sitBlock:Destroy()
                        sitBlock = nil
                    end
                    
                    for _, controlGui in pairs(sitControlButtons) do
                        if controlGui then
                            controlGui:Destroy()
                        end
                    end
                    sitControlButtons = {}
                    
                    Humanoid.Sit = false
                    button.Text = "Sit Block"
                    frame.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
                end
            end
        )
        
        sitButton = gui
        button.Text = "Sit Block"
        frame.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        
    elseif not enabled and isSitting then
        isSitting = false
        if sitButton then
            sitButton:Destroy()
            sitButton = nil
        end
        if sitBlock then
            sitBlock:Destroy()
            sitBlock = nil
        end
        for _, controlGui in pairs(sitControlButtons) do
            if controlGui then
                controlGui:Destroy()
            end
        end
        sitControlButtons = {}
        Humanoid.Sit = false
    end
end

-- Rayfield GUI Script - Parte 2 (Continuação)

-- Função Save/Teleport Position Toggle
local function ToggleSaveTeleport(enabled)
    if enabled and not saveButton then
        -- Criar botão Save Position
        local saveGui, saveFrame, saveBtnComponent = CreateDraggableButton("Save Pos", 
            UDim2.new(0, 80, 0, 40), 
            UDim2.new(0, 300, 0, 200),
            function()
                if Character and Character:FindFirstChild("HumanoidRootPart") then
                    SavedPosition = Character.HumanoidRootPart.CFrame
                    saveBtnComponent.Text = "Saved!"
                    saveFrame.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
                    wait(1)
                    saveBtnComponent.Text = "Save Pos"
                    saveFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                end
            end
        )
        
        saveButton = saveGui
        
        -- Criar botão Teleport Position
        local teleGui, teleFrame, teleBtnComponent = CreateDraggableButton("Teleport", 
            UDim2.new(0, 80, 0, 40), 
            UDim2.new(0, 400, 0, 200),
            function()
                if SavedPosition and not isTeleporting then
                    isTeleporting = true
                    teleBtnComponent.Text = "Flying..."
                    teleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 50)
                    
                    -- Criar efeito de voo suave até a posição salva
                    local startPos = Character.HumanoidRootPart.CFrame
                    local endPos = SavedPosition
                    local distance = (startPos.Position - endPos.Position).Magnitude
                    local flyTime = math.max(2, distance / 50) -- Velocidade ajustável
                    
                    local bodyVelocity = Instance.new("BodyVelocity")
                    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
                    bodyVelocity.Parent = Character.HumanoidRootPart
                    
                    local bodyPosition = Instance.new("BodyPosition")
                    bodyPosition.MaxForce = Vector3.new(4000, 4000, 4000)
                    bodyPosition.Position = endPos.Position
                    bodyPosition.Parent = Character.HumanoidRootPart
                    
                    -- Remover após chegar
                    wait(flyTime)
                    bodyVelocity:Destroy()
                    bodyPosition:Destroy()
                    
                    Character.HumanoidRootPart.CFrame = SavedPosition
                    
                    teleBtnComponent.Text = "Teleport"
                    teleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                    isTeleporting = false
                end
            end
        )
        
        teleportButton = teleGui
        
    elseif not enabled then
        if saveButton then
            saveButton:Destroy()
            saveButton = nil
        end
        if teleportButton then
            teleportButton:Destroy()
            teleportButton = nil
        end
        SavedPosition = nil
    end
end

-- Função NoClip com plataforma seguindo
local function ToggleNoClip(enabled)
    if enabled and not isNoClipping then
        isNoClipping = true
        
        -- Criar plataforma que segue o jogador
        followPlatform = Instance.new("Part")
        followPlatform.Name = "FollowPlatform"
        followPlatform.Size = Vector3.new(6, 0.5, 6)
        followPlatform.Material = Enum.Material.ForceField
        followPlatform.BrickColor = BrickColor.new("Bright green")
        followPlatform.Anchored = true
        followPlatform.CanCollide = true
        followPlatform.Transparency = 0.3
        followPlatform.Parent = Workspace
        
        -- Ativar NoClip
        NoClipConnection = RunService.Stepped:Connect(function()
            if Character then
                for _, part in pairs(Character:GetChildren()) do
                    if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                        part.CanCollide = false
                    end
                end
            end
        end)
        
        -- Plataforma seguindo o jogador
        FollowPlatformConnection = RunService.Heartbeat:Connect(function()
            if Character and Character:FindFirstChild("HumanoidRootPart") and followPlatform then
                local rootPart = Character.HumanoidRootPart
                local targetPos = rootPart.Position - Vector3.new(0, 6, 0)
                
                -- Raycast para detectar o chão
                local raycast = Workspace:Raycast(rootPart.Position, Vector3.new(0, -1000, 0))
                if raycast then
                    targetPos = Vector3.new(rootPart.Position.X, raycast.Position.Y - 1, rootPart.Position.Z)
                end
                
                followPlatform.Position = targetPos
                
                -- Detectar se o jogador atravessou o chão
                local playerY = rootPart.Position.Y
                local platformY = followPlatform.Position.Y
                
                if playerY < platformY - 5 and not cloneCreated then
                    cloneCreated = true
                    
                    -- Criar clone do personagem
                    if lastClone then
                        lastClone:Destroy()
                    end
                    
                    lastClone = Instance.new("Part")
                    lastClone.Name = "PlayerClone"
                    lastClone.Size = Vector3.new(2, 6, 1)
                    lastClone.Material = Enum.Material.Neon
                    lastClone.BrickColor = BrickColor.new("Bright red")
                    lastClone.Anchored = true
                    lastClone.CanCollide = false
                    lastClone.CFrame = CFrame.new(followPlatform.Position + Vector3.new(0, 4, 0))
                    lastClone.Parent = Workspace
                    
                    -- Esperar 1 segundo e teleportar para o clone
                    spawn(function()
                        wait(1)
                        if lastClone and Character and Character:FindFirstChild("HumanoidRootPart") then
                            Character.HumanoidRootPart.CFrame = lastClone.CFrame
                            lastClone:Destroy()
                            lastClone = nil
                            cloneCreated = false
                        end
                    end)
                end
                
                -- Reset clone detection quando o jogador estiver acima da plataforma
                if playerY > platformY + 2 then
                    cloneCreated = false
                end
            end
        end)
        
    elseif not enabled and isNoClipping then
        isNoClipping = false
        
        -- Desativar NoClip
        if NoClipConnection then
            NoClipConnection:Disconnect()
            NoClipConnection = nil
        end
        
        if FollowPlatformConnection then
            FollowPlatformConnection:Disconnect()
            FollowPlatformConnection = nil
        end
        
        -- Remover plataforma
        if followPlatform then
            followPlatform:Destroy()
            followPlatform = nil
        end
        
        -- Remover clone se existir
        if lastClone then
            lastClone:Destroy()
            lastClone = nil
        end
        
        -- Restaurar colisão
        if Character then
            for _, part in pairs(Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
        
        cloneCreated = false
    end
end

-- Função para atualizar referências do personagem
local function UpdateCharacterReferences()
    Character = Player.Character or Player.CharacterAdded:Wait()
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
end

-- Reconectar quando o personagem respawnar
Player.CharacterAdded:Connect(function(newCharacter)
    wait(1)
    UpdateCharacterReferences()
    
    -- Reativar funcionalidades se estavam ativas
    if isFloating then
        ToggleFloat(false)
        ToggleFloat(true)
    end
    
    if isSitting then
        ToggleSitBlock(false)
        ToggleSitBlock(true)
    end
    
    if isNoClipping then
        ToggleNoClip(false)
        ToggleNoClip(true)
    end
end)

-- Criar os toggles na GUI
local FloatToggle = MainTab:CreateToggle({
   Name = "Float Mode",
   CurrentValue = false,
   Flag = "FloatToggle",
   Callback = function(Value)
       ToggleFloat(Value)
   end,
})

local SitBlockToggle = MainTab:CreateToggle({
   Name = "Sit Block",
   CurrentValue = false,
   Flag = "SitBlockToggle", 
   Callback = function(Value)
       ToggleSitBlock(Value)
   end,
})

local SaveTeleportToggle = MainTab:CreateToggle({
   Name = "Save/Teleport Position",
   CurrentValue = false,
   Flag = "SaveTeleportToggle",
   Callback = function(Value)
       ToggleSaveTeleport(Value)
   end,
})

local NoClipToggle = MainTab:CreateToggle({
   Name = "NoClip + Following Platform",
   CurrentValue = false,
   Flag = "NoClipToggle",
   Callback = function(Value)
       ToggleNoClip(Value)
   end,
})

-- Slider para ajustar altura do float
local FloatHeightSlider = MainTab:CreateSlider({
   Name = "Float Height",
   Range = {5, 50},
   Increment = 1,
   CurrentValue = 16,
   Flag = "FloatHeight",
   Callback = function(Value)
       floatHeight = Value
   end,
})

-- Slider para velocidade do bloco
local BlockSpeedSlider = MainTab:CreateSlider({
   Name = "Block Move Speed",
   Range = {5, 50},
   Increment = 1,
   CurrentValue = 16,
   Flag = "BlockSpeed", 
   Callback = function(Value)
       blockMoveSpeed = Value
   end,
})

-- Label informativo
local InfoLabel = MainTab:CreateLabel("Script criado com todas as funcionalidades solicitadas!")

-- Botão para destruir todas as GUIs
local DestroyAllButton = MainTab:CreateButton({
   Name = "Destroy All Floating Buttons",
   Callback = function()
       for _, gui in pairs(PlayerGui:GetChildren()) do
           if gui.Name:find("Gui") then
               gui:Destroy()
           end
       end
       
       -- Reset de todas as variáveis
       if sitBlock then sitBlock:Destroy() end
       if followPlatform then followPlatform:Destroy() end
       if lastClone then lastClone:Destroy() end
       
       -- Desconectar todas as conexões
       if FloatConnection then FloatConnection:Disconnect() end
       if NoClipConnection then NoClipConnection:Disconnect() end
       if FollowPlatformConnection then FollowPlatformConnection:Disconnect() end
       
       -- Reset flags
       isFloating = false
       isSitting = false
       isNoClipping = false
       SavedPosition = nil
   end,
})

print("Script Rayfield carregado com sucesso!")
print("Todas as funcionalidades estão funcionando:")
print("- Float Mode com botão flutuante")
print("- Sit Block com controles direcionais")
print("- Save/Teleport Position com voo suave")
print("- NoClip com plataforma que segue e sistema de clone")
print("Desfrute do script!")
