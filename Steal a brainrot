-- Script GUI Completo com Loading e Funcionalidades
-- Versão: 1.0
-- Compatível com Mobile e Desktop

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Variáveis Globais
local mainGui
local loadingGui
local isGuiVisible = true
local floatingEnabled = false
local platformEnabled = false
local teleportEnabled = false
local savedPosition = nil

local floatingButton
local platformButton
local saveButton
local teleportButton
local platform

-- Cores e Estilos
local colors = {
    background = Color3.fromRGB(25, 25, 35),
    accent = Color3.fromRGB(0, 162, 255),
    success = Color3.fromRGB(46, 204, 113),
    danger = Color3.fromRGB(231, 76, 60),
    text = Color3.fromRGB(255, 255, 255),
    secondary = Color3.fromRGB(52, 73, 94)
}

-- Função para criar gradiente
local function createGradient(colorStart, colorEnd, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, colorStart),
        ColorSequenceKeypoint.new(1, colorEnd)
    })
    gradient.Rotation = rotation or 90
    return gradient
end

-- Função para criar sombra
local function createShadow(parent)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Parent = parent
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.Position = UDim2.new(0, 2, 0, 2)
    shadow.Size = UDim2.new(1, 0, 1, 0)
    shadow.ZIndex = parent.ZIndex - 1
    return shadow
end

-- Função para animação de tween
local function tweenObject(object, properties, duration, easingStyle, easingDirection)
    local tweenInfo = TweenInfo.new(
        duration or 0.3,
        easingStyle or Enum.EasingStyle.Quad,
        easingDirection or Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(object, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Criar Loading Screen
local function createLoadingScreen()
    loadingGui = Instance.new("ScreenGui")
    loadingGui.Name = "LoadingGui"
    loadingGui.Parent = playerGui
    loadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local background = Instance.new("Frame")
    background.Name = "Background"
    background.Parent = loadingGui
    background.BackgroundColor3 = colors.background
    background.Size = UDim2.new(1, 0, 1, 0)
    background.ZIndex = 10
    
    local gradient = createGradient(colors.background, Color3.fromRGB(15, 15, 25))
    gradient.Parent = background
    
    local loadingFrame = Instance.new("Frame")
    loadingFrame.Name = "LoadingFrame"
    loadingFrame.Parent = background
    loadingFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    loadingFrame.Position = UDim2.new(0.5, -150, 0.5, -50)
    loadingFrame.Size = UDim2.new(0, 300, 0, 100)
    loadingFrame.ZIndex = 11
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = loadingFrame
    
    createShadow(loadingFrame)
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Parent = loadingFrame
    title.BackgroundTransparency = 1
    title.Position = UDim2.new(0, 0, 0, 10)
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Font = Enum.Font.GothamBold
    title.Text = "Carregando GUI..."
    title.TextColor3 = colors.text
    title.TextSize = 18
    title.ZIndex = 12
    
    local progressBack = Instance.new("Frame")
    progressBack.Name = "ProgressBack"
    progressBack.Parent = loadingFrame
    progressBack.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    progressBack.Position = UDim2.new(0, 20, 0, 50)
    progressBack.Size = UDim2.new(1, -40, 0, 20)
    progressBack.ZIndex = 12
    
    local progressCorner = Instance.new("UICorner")
    progressCorner.CornerRadius = UDim.new(0, 10)
    progressCorner.Parent = progressBack
    
    local progressBar = Instance.new("Frame")
    progressBar.Name = "ProgressBar"
    progressBar.Parent = progressBack
    progressBar.BackgroundColor3 = colors.accent
    progressBar.Size = UDim2.new(0, 0, 1, 0)
    progressBar.ZIndex = 13
    
    local barCorner = Instance.new("UICorner")
    barCorner.CornerRadius = UDim.new(0, 10)
    barCorner.Parent = progressBar
    
    local barGradient = createGradient(colors.accent, Color3.fromRGB(0, 200, 255))
    barGradient.Parent = progressBar
    
    -- Animação da barra de carregamento
    for i = 0, 100, 2 do
        tweenObject(progressBar, {Size = UDim2.new(i/100, 0, 1, 0)}, 0.05)
        wait(0.05)
    end
    
    wait(0.5)
    tweenObject(background, {BackgroundTransparency = 1}, 0.5)
    tweenObject(loadingFrame, {BackgroundTransparency = 1}, 0.5)
    tweenObject(title, {TextTransparency = 1}, 0.5)
    tweenObject(progressBack, {BackgroundTransparency = 1}, 0.5)
    tweenObject(progressBar, {BackgroundTransparency = 1}, 0.5)
    
    wait(0.5)
    loadingGui:Destroy()
end

-- Criar GUI Principal
local function createMainGui()
    mainGui = Instance.new("ScreenGui")
    mainGui.Name = "MainGui"
    mainGui.Parent = playerGui
    mainGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Frame Principal
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = mainGui
    mainFrame.BackgroundColor3 = colors.background
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.Size = UDim2.new(0, 400, 0, 300)
    mainFrame.ZIndex = 1
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 15)
    mainCorner.Parent = mainFrame
    
    createShadow(mainFrame)
    
    local mainGradient = createGradient(colors.background, Color3.fromRGB(20, 20, 30))
    mainGradient.Parent = mainFrame
    
    -- Barra Superior
    local topBar = Instance.new("Frame")
    topBar.Name = "TopBar"
    topBar.Parent = mainFrame
    topBar.BackgroundColor3 = colors.accent
    topBar.Size = UDim2.new(1, 0, 0, 40)
    topBar.ZIndex = 2
    
    local topCorner = Instance.new("UICorner")
    topCorner.CornerRadius = UDim.new(0, 15)
    topCorner.Parent = topBar
    
    local topGradient = createGradient(colors.accent, Color3.fromRGB(0, 120, 200))
    topGradient.Parent = topBar
    
    -- Título
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Parent = topBar
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 15, 0, 0)
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = "GUI Principal"
    titleLabel.TextColor3 = colors.text
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.ZIndex = 3
    
    -- Botão Fechar/Minimizar
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = topBar
    toggleButton.BackgroundColor3 = Color3.fromRGB(255, 95, 87)
    toggleButton.Position = UDim2.new(1, -35, 0, 5)
    toggleButton.Size = UDim2.new(0, 30, 0, 30)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Text = "×"
    toggleButton.TextColor3 = colors.text
    toggleButton.TextSize = 18
    toggleButton.ZIndex = 3
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 15)
    toggleCorner.Parent = toggleButton
    
    -- Área de Conteúdo
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Parent = mainFrame
    contentFrame.BackgroundTransparency = 1
    contentFrame.Position = UDim2.new(0, 0, 0, 40)
    contentFrame.Size = UDim2.new(1, 0, 1, -40)
    contentFrame.ZIndex = 2
    
    -- Tab Main
    local mainTab = Instance.new("Frame")
    mainTab.Name = "MainTab"
    mainTab.Parent = contentFrame
    mainTab.BackgroundTransparency = 1
    mainTab.Size = UDim2.new(1, 0, 1, 0)
    mainTab.ZIndex = 2
    
    -- Lista de Toggles
    local listLayout = Instance.new("UIListLayout")
    listLayout.Parent = mainTab
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 10)
    
    local padding = Instance.new("UIPadding")
    padding.Parent = mainTab
    padding.PaddingAll = UDim.new(0, 15)
    
    -- Função para criar toggle
    local function createToggle(name, description, callback)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = name .. "Toggle"
        toggleFrame.Parent = mainTab
        toggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
        toggleFrame.Size = UDim2.new(1, 0, 0, 60)
        toggleFrame.ZIndex = 3
        
        local toggleCorner = Instance.new("UICorner")
        toggleCorner.CornerRadius = UDim.new(0, 10)
        toggleCorner.Parent = toggleFrame
        
        local toggleLabel = Instance.new("TextLabel")
        toggleLabel.Parent = toggleFrame
        toggleLabel.BackgroundTransparency = 1
        toggleLabel.Position = UDim2.new(0, 15, 0, 5)
        toggleLabel.Size = UDim2.new(1, -80, 0, 25)
        toggleLabel.Font = Enum.Font.GothamMedium
        toggleLabel.Text = name
        toggleLabel.TextColor3 = colors.text
        toggleLabel.TextSize = 14
        toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
        toggleLabel.ZIndex = 4
        
        local toggleDesc = Instance.new("TextLabel")
        toggleDesc.Parent = toggleFrame
        toggleDesc.BackgroundTransparency = 1
        toggleDesc.Position = UDim2.new(0, 15, 0, 30)
        toggleDesc.Size = UDim2.new(1, -80, 0, 20)
        toggleDesc.Font = Enum.Font.Gotham
        toggleDesc.Text = description
        toggleDesc.TextColor3 = Color3.fromRGB(150, 150, 160)
        toggleDesc.TextSize = 12
        toggleDesc.TextXAlignment = Enum.TextXAlignment.Left
        toggleDesc.ZIndex = 4
        
        local toggleButton = Instance.new("TextButton")
        toggleButton.Parent = toggleFrame
        toggleButton.BackgroundColor3 = colors.secondary
        toggleButton.Position = UDim2.new(1, -50, 0.5, -15)
        toggleButton.Size = UDim2.new(0, 40, 0, 30)
        toggleButton.Text = ""
        toggleButton.ZIndex = 4
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 15)
        buttonCorner.Parent = toggleButton
        
        local toggleCircle = Instance.new("Frame")
        toggleCircle.Parent = toggleButton
        toggleCircle.BackgroundColor3 = colors.text
        toggleCircle.Position = UDim2.new(0, 3, 0.5, -12)
        toggleCircle.Size = UDim2.new(0, 24, 0, 24)
        toggleCircle.ZIndex = 5
        
        local circleCorner = Instance.new("UICorner")
        circleCorner.CornerRadius = UDim.new(0, 12)
        circleCorner.Parent = toggleCircle
        
        local isEnabled = false
        
        toggleButton.MouseButton1Click:Connect(function()
            isEnabled = not isEnabled
            
            if isEnabled then
                tweenObject(toggleButton, {BackgroundColor3 = colors.success}, 0.2)
                tweenObject(toggleCircle, {Position = UDim2.new(0, 13, 0.5, -12)}, 0.2)
            else
                tweenObject(toggleButton, {BackgroundColor3 = colors.secondary}, 0.2)
                tweenObject(toggleCircle, {Position = UDim2.new(0, 3, 0.5, -12)}, 0.2)
            end
            
            callback(isEnabled)
        end)
        
        return toggleFrame
    end
    
    -- Função para tornar um elemento arrastável
    local function makeDraggable(element)
        local dragging = false
        local dragStart = nil
        local startPos = nil
        
        element.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = element.Position
            end
        end)
        
        element.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                element.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
        
        element.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)
    end
    
    -- Função para criar botão flutuante
    local function createFloatingButton(name, text, color, callback)
        local button = Instance.new("TextButton")
        button.Name = name
        button.Parent = playerGui
        button.BackgroundColor3 = color
        button.Position = UDim2.new(0, 50, 0, 100)
        button.Size = UDim2.new(0, 80, 0, 40)
        button.Font = Enum.Font.GothamBold
        button.Text = text
        button.TextColor3 = colors.text
        button.TextSize = 12
        button.ZIndex = 10
        button.Visible = false
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 10)
        corner.Parent = button
        
        local gradient = createGradient(color, Color3.fromRGB(color.R * 255 * 0.8, color.G * 255 * 0.8, color.B * 255 * 0.8))
        gradient.Parent = button
        
        makeDraggable(button)
        
        button.MouseButton1Click:Connect(callback)
        
        return button
    end
    
    -- Sistema de Flutuação
    local bodyVelocity
    local bodyPosition
    
    local function enableFloating()
        if character and rootPart then
            bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.Parent = rootPart
            
            bodyPosition = Instance.new("BodyPosition")
            bodyPosition.MaxForce = Vector3.new(4000, 4000, 4000)
            bodyPosition.Position = rootPart.Position + Vector3.new(0, 5, 0)
            bodyPosition.Parent = rootPart
        end
    end
    
    local function disableFloating()
        if bodyVelocity then bodyVelocity:Destroy() end
        if bodyPosition then bodyPosition:Destroy() end
    end
    
    -- Sistema de Plataforma
    local function createPlatform()
        platform = Instance.new("Part")
        platform.Name = "SitPlatform"
        platform.Parent = workspace
        platform.Size = Vector3.new(6, 1, 6)
        platform.Material = Enum.Material.Neon
        platform.BrickColor = BrickColor.new("Bright blue")
        platform.CanCollide = true
        platform.Anchored = true
        platform.Position = rootPart.Position - Vector3.new(0, 3, 0)
        
        local seat = Instance.new("Seat")
        seat.Parent = platform
        seat.Size = Vector3.new(2, 1, 2)
        seat.Material = Enum.Material.Neon
        seat.BrickColor = BrickColor.new("Bright green")
        seat.CanCollide = true
        seat.Anchored = true
        seat.Position = platform.Position + Vector3.new(0, 1, 0)
        
        -- Controles de movimento da plataforma
        local controlGui = Instance.new("ScreenGui")
        controlGui.Name = "PlatformControls"
        controlGui.Parent = playerGui
        
        local controlFrame = Instance.new("Frame")
        controlFrame.Parent = controlGui
        controlFrame.BackgroundColor3 = colors.background
        controlFrame.Position = UDim2.new(1, -120, 0.5, -60)
        controlFrame.Size = UDim2.new(0, 100, 0, 120)
        controlFrame.ZIndex = 10
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 10)
        corner.Parent = controlFrame
        
        local buttons = {
            {text = "↑", pos = UDim2.new(0.5, -15, 0, 5), dir = Vector3.new(0, 0, -5)},
            {text = "←", pos = UDim2.new(0, 5, 0.5, -15), dir = Vector3.new(-5, 0, 0)},
            {text = "→", pos = UDim2.new(1, -35, 0.5, -15), dir = Vector3.new(5, 0, 0)},
            {text = "↓", pos = UDim2.new(0.5, -15, 1, -35), dir = Vector3.new(0, 0, 5)}
        }
        
        for _, btn in pairs(buttons) do
            local button = Instance.new("TextButton")
            button.Parent = controlFrame
            button.BackgroundColor3 = colors.accent
            button.Position = btn.pos
            button.Size = UDim2.new(0, 30, 0, 30)
            button.Font = Enum.Font.GothamBold
            button.Text = btn.text
            button.TextColor3 = colors.text
            button.TextSize = 16
            button.ZIndex = 11
            
            local btnCorner = Instance.new("UICorner")
            btnCorner.CornerRadius = UDim.new(0, 5)
            btnCorner.Parent = button
            
            button.MouseButton1Click:Connect(function()
                if platform and seat then
                    platform.Position = platform.Position + btn.dir
                    seat.Position = seat.Position + btn.dir
                end
            end)
        end
        
        seat.Occupant:Connect(function()
            controlFrame.Visible = seat.Occupant ~= nil
        end)
    end
    
    local function destroyPlatform()
        if platform then platform:Destroy() end
        local controlGui = playerGui:FindFirstChild("PlatformControls")
        if controlGui then controlGui:Destroy() end
    end
    
    -- Criar Toggles
    createToggle("Float Mode", "Ativar modo de flutuação no mapa", function(enabled)
        floatingEnabled = enabled
        if enabled then
            floatingButton = createFloatingButton("FloatingButton", "Float", colors.success, function()
                if floatingEnabled then
                    enableFloating()
                end
            end)
            floatingButton.Visible = true
        else
            disableFloating()
            if floatingButton then floatingButton:Destroy() end
        end
    end)
    
    createToggle("Sit Platform", "Criar plataforma para sentar e mover", function(enabled)
        platformEnabled = enabled
        if enabled then
            platformButton = createFloatingButton("PlatformButton", "Sit", colors.accent, function()
                if platformEnabled then
                    createPlatform()
                end
            end)
            platformButton.Position = UDim2.new(0, 50, 0, 150)
            platformButton.Visible = true
        else
            destroyPlatform()
            if platformButton then platformButton:Destroy() end
        end
    end)
    
    createToggle("Teleport System", "Sistema de salvamento e teleporte", function(enabled)
        teleportEnabled = enabled
        if enabled then
            saveButton = createFloatingButton("SaveButton", "Save", colors.danger, function()
                if rootPart then
                    savedPosition = rootPart.Position
                    print("Posição salva!")
                end
            end)
            saveButton.Position = UDim2.new(0, 50, 0, 200)
            saveButton.Visible = true
            
            teleportButton = createFloatingButton("TeleportButton", "TP", Color3.fromRGB(155, 89, 182), function()
                if savedPosition and rootPart then
                    rootPart.CFrame = CFrame.new(savedPosition)
                end
            end)
            teleportButton.Position = UDim2.new(0, 140, 0, 200)
            teleportButton.Visible = true
        else
            if saveButton then saveButton:Destroy() end
            if teleportButton then teleportButton:Destroy() end
        end
    end)
    
    -- Funcionalidade do botão toggle
    toggleButton.MouseButton1Click:Connect(function()
        isGuiVisible = not isGuiVisible
        
        if isGuiVisible then
            tweenObject(mainFrame, {Position = UDim2.new(0.5, -200, 0.5, -150)}, 0.3, Enum.EasingStyle.Back)
            toggleButton.Text = "×"
        else
            tweenObject(mainFrame, {Position = UDim2.new(0.5, -200, 1, 50)}, 0.3, Enum.EasingStyle.Back)
            toggleButton.Text = "+"
        end
    end)
    
    -- Tornar a GUI arrastável
    makeDraggable(mainFrame)
end

-- Inicializar
spawn(function()
    createLoadingScreen()
    wait(0.5)
    createMainGui()
end)

-- Reconectar quando o personagem respawna
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
end)
