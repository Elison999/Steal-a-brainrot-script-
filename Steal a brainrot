-- Carregando Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- Variáveis globais
local floatEnabled = false
local blockEnabled = false
local savedPosition = nil
local noclipEnabled = false
local floatConnection = nil
local noclipConnection = nil
local platform = nil
local block = nil
local blockConnection = nil

-- Criando a GUI principal
local Window = Rayfield:CreateWindow({
    Name = "Movement Script",
    LoadingTitle = "Carregando Script",
    LoadingSubtitle = "Por favor aguarde...",
    ConfigurationSaving = {
        Enabled = false
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

local MainTab = Window:CreateTab("Main", 4483362458)

-- Função para criar botões flutuantes arrastaveis
local function createDraggableButton(name, size, position, callback)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name .. "Gui"
    screenGui.Parent = PlayerGui
    screenGui.ResetOnSpawn = false
    
    local button = Instance.new("TextButton")
    button.Name = name .. "Button"
    button.Parent = screenGui
    button.Size = size or UDim2.new(0, 100, 0, 50)
    button.Position = position or UDim2.new(0.5, -50, 0.1, 0)
    button.Text = name
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BorderSizePixel = 0
    
    -- Fazendo o botão arrastavel
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = button.Position
        end
    end)
    
    button.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    button.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    button.MouseButton1Click:Connect(callback)
    
    return screenGui
end

-- Função Float
local function toggleFloat()
    if floatEnabled then
        local character = Player.Character
        if character and character:FindFirstChild("Humanoid") then
            local humanoid = character.Humanoid
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            
            if rootPart then
                local bodyVelocity = Instance.new("BodyVelocity")
                bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity.Parent = rootPart
                
                floatConnection = RunService.Heartbeat:Connect(function()
                    if floatEnabled and rootPart and bodyVelocity then
                        local camera = workspace.CurrentCamera
                        local moveVector = humanoid.MoveDirection
                        local lookDirection = camera.CFrame.LookVector
                        local rightDirection = camera.CFrame.RightVector
                        
                        local velocity = Vector3.new(0, 0, 0)
                        if moveVector.Magnitude > 0 then
                            velocity = (lookDirection * moveVector.Z + rightDirection * moveVector.X) * 16
                            velocity = Vector3.new(velocity.X, 2, velocity.Z)
                        else
                            velocity = Vector3.new(0, 2, 0)
                        end
                        
                        bodyVelocity.Velocity = velocity
                    end
                end)
            end
        end
    else
        if floatConnection then
            floatConnection:Disconnect()
            floatConnection = nil
        end
        
        local character = Player.Character
        if character then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart and rootPart:FindFirstChild("BodyVelocity") then
                rootPart.BodyVelocity:Destroy()
            end
        end
    end
end

-- Função Block
local function createMovableBlock()
    if not block then
        local character = Player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local rootPart = character.HumanoidRootPart
            
            -- Criando o bloco
            block = Instance.new("Part")
            block.Name = "MovableBlock"
            block.Size = Vector3.new(4, 1, 4)
            block.Material = Enum.Material.Neon
            block.BrickColor = BrickColor.new("Bright blue")
            block.Anchored = true
            block.Position = rootPart.Position - Vector3.new(0, 3, 0)
            block.Parent = workspace
            
            -- Teleportando o jogador para o bloco
            rootPart.CFrame = CFrame.new(block.Position + Vector3.new(0, 2, 0))
            
            -- Criando GUI de controle
            local controlGui = Instance.new("ScreenGui")
            controlGui.Name = "BlockControlGui"
            controlGui.Parent = PlayerGui
            controlGui.ResetOnSpawn = false
            
            local frame = Instance.new("Frame")
            frame.Parent = controlGui
            frame.Size = UDim2.new(0, 200, 0, 200)
            frame.Position = UDim2.new(0.5, -100, 0.5, -100)
            frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            frame.BorderSizePixel = 0
            
            -- Botões de movimento
            local buttons = {
                {name = "↑", pos = UDim2.new(0.5, -25, 0, 10), dir = Vector3.new(0, 0, -5)},
                {name = "↓", pos = UDim2.new(0.5, -25, 1, -60), dir = Vector3.new(0, 0, 5)},
                {name = "←", pos = UDim2.new(0, 10, 0.5, -25), dir = Vector3.new(-5, 0, 0)},
                {name = "→", pos = UDim2.new(1, -60, 0.5, -25), dir = Vector3.new(5, 0, 0)}
            }
            
            for _, buttonData in pairs(buttons) do
                local btn = Instance.new("TextButton")
                btn.Parent = frame
                btn.Size = UDim2.new(0, 50, 0, 50)
                btn.Position = buttonData.pos
                btn.Text = buttonData.name
                btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                btn.TextColor3 = Color3.fromRGB(255, 255, 255)
                btn.BorderSizePixel = 0
                btn.TextScaled = true
                
                btn.MouseButton1Click:Connect(function()
                    if block then
                        block.Position = block.Position + buttonData.dir
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            character.HumanoidRootPart.CFrame = CFrame.new(block.Position + Vector3.new(0, 2, 0))
                        end
                    end
                end)
            end
            
            return controlGui
        end
    end
end

-- Função para salvar posição
local function savePosition()
    local character = Player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        savedPosition = character.HumanoidRootPart.Position
        Rayfield:Notify({
            Title = "Posição Salva",
            Content = "Posição atual foi salva com sucesso!",
            Duration = 3,
            Image = 4483362458
        })
    end
end

-- Função para teleportar para posição salva
local function teleportToSaved()
    if savedPosition then
        local character = Player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.Position = savedPosition
            Rayfield:Notify({
                Title = "Teleportado",
                Content = "Você foi teleportado para a posição salva!",
                Duration = 3,
                Image = 4483362458
            })
        end
    else
        Rayfield:Notify({
            Title = "Erro",
            Content = "Nenhuma posição foi salva ainda!",
            Duration = 3,
            Image = 4483362458
        })
    end
end

-- Função Noclip
local function toggleNoclip()
    if noclipEnabled then
        local character = Player.Character
        if character then
            -- Criando plataforma que segue o jogador
            if not platform then
                platform = Instance.new("Part")
                platform.Name = "NoclipPlatform"
                platform.Size = Vector3.new(4, 1, 4)
                platform.Material = Enum.Material.ForceField
                platform.BrickColor = BrickColor.new("Bright green")
                platform.Anchored = true
                platform.Transparency = 0.5
                platform.Parent = workspace
            end
            
            noclipConnection = RunService.Heartbeat:Connect(function()
                if noclipEnabled and character then
                    local rootPart = character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        -- Noclip
                        for _, part in pairs(character:GetChildren()) do
                            if part:IsA("BasePart") and part ~= rootPart then
                                part.CanCollide = false
                            end
                        end
                        
                        -- Atualizando posição da plataforma
                        if platform then
                            platform.Position = Vector3.new(rootPart.Position.X, rootPart.Position.Y - 4, rootPart.Position.Z)
                            
                            -- Verificando se o jogador atravessou o chão
                            if rootPart.Position.Y < platform.Position.Y then
                                if savedPosition then
                                    rootPart.Position = savedPosition
                                else
                                    rootPart.Position = platform.Position + Vector3.new(0, 6, 0)
                                end
                            end
                        end
                    end
                end
            end)
        end
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        
        if platform then
            platform:Destroy()
            platform = nil
        end
        
        local character = Player.Character
        if character then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- Toggle Float
local floatToggle = MainTab:CreateToggle({
    Name = "Float Mode",
    CurrentValue = false,
    Flag = "FloatToggle",
    Callback = function(Value)
        floatEnabled = Value
        if Value then
            createDraggableButton("Float", UDim2.new(0, 80, 0, 40), UDim2.new(0.1, 0, 0.1, 0), toggleFloat)
        else
            toggleFloat()
            if PlayerGui:FindFirstChild("FloatGui") then
                PlayerGui.FloatGui:Destroy()
            end
        end
    end,
})

-- Toggle Block
local blockGui = nil
local blockToggle = MainTab:CreateToggle({
    Name = "Movable Block",
    CurrentValue = false,
    Flag = "BlockToggle",
    Callback = function(Value)
        blockEnabled = Value
        if Value then
            createDraggableButton("Sit Block", UDim2.new(0, 80, 0, 40), UDim2.new(0.2, 0, 0.1, 0), function()
                blockGui = createMovableBlock()
            end)
        else
            if block then
                block:Destroy()
                block = nil
            end
            if blockGui then
                blockGui:Destroy()
                blockGui = nil
            end
            if PlayerGui:FindFirstChild("SitBlockGui") then
                PlayerGui.SitBlockGui:Destroy()
            end
            if PlayerGui:FindFirstChild("BlockControlGui") then
                PlayerGui.BlockControlGui:Destroy()
            end
        end
    end,
})

-- Toggle Position System
local positionToggle = MainTab:CreateToggle({
    Name = "Position System",
    CurrentValue = false,
    Flag = "PositionToggle",
    Callback = function(Value)
        if Value then
            createDraggableButton("Save Pos", UDim2.new(0, 80, 0, 40), UDim2.new(0.3, 0, 0.1, 0), savePosition)
            createDraggableButton("TP Pos", UDim2.new(0, 80, 0, 40), UDim2.new(0.4, 0, 0.1, 0), teleportToSaved)
        else
            if PlayerGui:FindFirstChild("Save PosGui") then
                PlayerGui["Save PosGui"]:Destroy()
            end
            if PlayerGui:FindFirstChild("TP PosGui") then
                PlayerGui["TP PosGui"]:Destroy()
            end
        end
    end,
})

-- Toggle Noclip
local noclipToggle = MainTab:CreateToggle({
    Name = "Noclip + Platform",
    CurrentValue = false,
    Flag = "NoclipToggle",
    Callback = function(Value)
        noclipEnabled = Value
        toggleNoclip()
    end,
})

-- Limpeza quando o jogador sai
Player.CharacterRemoving:Connect(function()
    if floatConnection then
        floatConnection:Disconnect()
    end
    if noclipConnection then
        noclipConnection:Disconnect()
    end
    if blockConnection then
        blockConnection:Disconnect()
    end
end)
